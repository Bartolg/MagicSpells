#version 310 es
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba16f, binding = 0) writeonly uniform highp image2D uTarget;
layout(rgba16f, binding = 1) readonly uniform highp image2D uVelocity;
layout(rgba16f, binding = 2) readonly uniform highp image2D uPressure;

uniform vec2 uTexelSize;

float samplePressure(ivec2 coord, ivec2 size) {
    coord = clamp(coord, ivec2(0), size - 1);
    return imageLoad(uPressure, coord).x;
}

void main() {
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(uVelocity);
    if (any(greaterThanEqual(gid, size))) {
        return;
    }
    if (gid.x == 0 || gid.y == 0 || gid.x == size.x - 1 || gid.y == size.y - 1) {
        imageStore(uTarget, gid, vec4(0.0));
        return;
    }
    float left = samplePressure(gid + ivec2(-1, 0), size);
    float right = samplePressure(gid + ivec2(1, 0), size);
    float bottom = samplePressure(gid + ivec2(0, -1), size);
    float top = samplePressure(gid + ivec2(0, 1), size);
    vec2 velocity = imageLoad(uVelocity, gid).xy;
    float scaleX = 0.5 / max(uTexelSize.x, 1e-6);
    float scaleY = 0.5 / max(uTexelSize.y, 1e-6);
    velocity -= vec2(scaleX * (right - left), scaleY * (top - bottom));
    imageStore(uTarget, gid, vec4(velocity, 0.0, 0.0));
}
