#version 310 es
layout(local_size_x = 8, local_size_y = 8, local_size_z = 1) in;

layout(rgba16f, binding = 0) writeonly uniform highp image2D uTarget;
layout(rgba16f, binding = 1) readonly uniform highp image2D uSource;

uniform vec2 uPoint;
uniform vec2 uDelta;
uniform vec3 uColor;
uniform float uRadius;
uniform float uAspect;
uniform int uAffectsVelocity;

void main() {
    ivec2 gid = ivec2(gl_GlobalInvocationID.xy);
    ivec2 size = imageSize(uTarget);
    if (any(greaterThanEqual(gid, size))) {
        return;
    }
    vec2 uv = (vec2(gid) + 0.5) / vec2(size);
    vec2 offset = uv - uPoint;
    offset.x *= uAspect;
    float influence = exp(-dot(offset, offset) / max(uRadius, 1e-4));
    vec4 base = imageLoad(uSource, gid);
    if (uAffectsVelocity == 1) {
        base.xy += uDelta * influence;
    } else {
        base.xyz += uColor * influence;
        base.w = max(base.w, influence);
    }
    imageStore(uTarget, gid, base);
}
